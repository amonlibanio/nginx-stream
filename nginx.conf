
daemon off;

worker_processes  1;

pid /run/nginx.pid;

error_log /dev/stderr info;

events {
    worker_connections 1024;
}

rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;

rtmp {

  #log_format new '$remote_addr';
  access_log /dev/stdout combined;

  server {
    listen 1935;
    chunk_size 4000;

    application stream {

    live on;
    record off;
    sync 10ms;

    exec ffmpeg -i rtmp://localhost:1935/stream/$name
      
        -c:a libfdk_aac -b:a 64k -ar 44100 -c:v libx264 -b:v 200k -f flv -g 50 -r 25    
        -s 256x144 -muxrate 200k -bufsize 200k -crf 18 -preset veryfast                 
        -profile:v baseline rtmp://localhost:1935/show/$name_144p

        -c:a libfdk_aac -b:a 96k -ar 44100 -c:v libx264 -b:v 400k -f flv -g 50 -r 25    
        -s 426x240 -muxrate 400k -bufsize 400k -crf 18 -preset veryfast                 
        -profile:v baseline rtmp://localhost:1935/show/$name_240p 

        -c:a libfdk_aac -b:a 96k -ar 44100 -c:v libx264 -b:v 750k -f flv -g 50 -r 25    
        -s 640x360 -muxrate 750k -bufsize 750k -crf 18 -preset veryfast                 
        -profile:v baseline rtmp://localhost:1935/show/$name_360p

        -c:a libfdk_aac -b:a 128k -ar 44100 -c:v libx264 -b:v 1000k -f flv -g 50 -r 25    
        -s 854x480 -muxrate 1000k -bufsize 1000k -crf 18 -preset veryfast                 
        -profile:v baseline rtmp://localhost:1935/show/$name_480p

        -c:a libfdk_aac -b:a 128k -ar 44100 -c:v libx264 -b:v 2000k -f flv -g 50 -r 25    
        -s 1280x720 -muxrate 2000k -bufsize 2000k -crf 18 -preset veryfast                 
        -profile:v baseline rtmp://localhost:1935/show/$name_720p;

   }

    application show {

      live on;

      hls on;
      hls_nested on;
      hls_type live;
      hls_path /data/hls;
      hls_fragment_naming system;
      hls_fragment 5s;
      hls_playlist_length 30s;
      hls_cleanup on;

      hls_variant _144p BANDWIDTH=288000,RESOLUTION=256x144;
      hls_variant _240p BANDWIDTH=528000,RESOLUTION=426x240;
      hls_variant _360p BANDWIDTH=878000,RESOLUTION=640x360;
      hls_variant _480p BANDWIDTH=1128000,RESOLUTION=854x480;
      hls_variant _720p BANDWIDTH=2628000,RESOLUTION=1280x720;

      dash on;
      dash_nested on;
      dash_path /data/dash;
      dash_cleanup on;

      dash_variant _144p  BANDWIDTH="288000" width="256" height="144";
      dash_variant _240p  BANDWIDTH="528000" width="426" height="240";
      dash_variant _360p  BANDWIDTH="878000" width="640" height="360";
      dash_variant _480p  BANDWIDTH="1128000" width="854" height="480";
      dash_variant _720p  BANDWIDTH="2628000" width="1280" height="720" max;
    }
  }
}

http {

  gzip on;
  gzip_vary on;
	gzip_disable "msie6";
	types_hash_max_size 2048;
  client_max_body_size 1m;

  server_tokens off;
	keepalive_timeout 65;
  
  sendfile on;
	tcp_nodelay on;

  include /opt/nginx/mime.types;
	default_type application/octet-stream;

  log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '$request_time $upstream_response_time $pipe $upstream_cache_status';

  access_log /dev/stdout main_timed;

  server {

    listen 80 default_server;

    location / {

      # Disable cache
      etag off;
      add_header Last-Modified "";
      add_header 'Cache-Control' 'no-cache';

      # CORS setup
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      add_header 'Access-Control-Allow-Headers' 'Range';

      # allow CORS preflight requests
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Headers' 'Range';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      types {
        application/dash+xml mpd;
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;
        video/mp4 mp4;
      }
    }

    location /hls {
      types {
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;
      }
      root /data;
      add_header Cache-Control no-cache;
      add_header Access-Control-Allow-Origin *;
      expires -1;
    }

    location /dash {
      types {
        application/dash+xml mpd;
        video/mp4 mp4;
      }
      root /data;
      add_header Cache-Control no-cache;
      add_header Access-Control-Allow-Origin *;
      expires -1;
    }

    location /stat {
      rtmp_stat all;
      rtmp_stat_stylesheet static/stat.xsl;
    }

    location /static {
      alias /www/static;
    }

    location = /crossdomain.xml {
      root /www/static;
      default_type text/xml;
      expires 24h;
    }
  }
}